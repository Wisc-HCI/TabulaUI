//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Tabula
{
    [Serializable]
    public class RecordingMsg : Message
    {
        public const string k_RosMessageName = "tabula_msgs/Recording";
        public override string RosMessageName => k_RosMessageName;

        public string utt;
        public string[] trace;
        public string world_json;

        public RecordingMsg()
        {
            this.utt = "";
            this.trace = new string[0];
            this.world_json = "";
        }

        public RecordingMsg(string utt, string[] trace, string world_json)
        {
            this.utt = utt;
            this.trace = trace;
            this.world_json = world_json;
        }

        public static RecordingMsg Deserialize(MessageDeserializer deserializer) => new RecordingMsg(deserializer);

        private RecordingMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.utt);
            deserializer.Read(out this.trace, deserializer.ReadLength());
            deserializer.Read(out this.world_json);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.utt);
            serializer.WriteLength(this.trace);
            serializer.Write(this.trace);
            serializer.Write(this.world_json);
        }

        public override string ToString()
        {
            return "RecordingMsg: " +
            "\nutt: " + utt.ToString() +
            "\ntrace: " + System.String.Join(", ", trace.ToList()) +
            "\nworld_json: " + world_json.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
